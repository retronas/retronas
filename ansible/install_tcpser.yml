- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "tcpser"
    - my_file: "install_tcpser"

    - my_packages:
      - make
      - gcc
      - coreutils
      - git

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install build tools"
    ansible.builtin.package:
       name: "{{ my_packages }}"
       state: latest

  - name: "{{ my_name }} - Generate scripts"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ my_file }}.sh.j2"
      dest: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      owner: root
      group: root
      mode: 0755

  - name: "{{ my_name }} - create startup service"
    ansible.builtin.template:
      src: templates/{{ my_file }}/tcpser@.service.j2
      dest: /usr/lib/systemd/system/tcpser@.service
      owner: root
      group: root
      mode: 0644

  - name: "{{ my_name }} - build source"
    ansible.builtin.command:
      cmd: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      creates: "{{ retronas_root }}/bin/tcpser"

  - name: "{{ my_name }} - create config dir"
    ansible.builtin.file:
      path: "{{ retronas_root }}/etc/{{ my_name }}"
      state: directory
      mode: '0755'

  - name: "{{ my_name }} - add {{ retronas_user }} to dialout group"
    ansible.builtin.user:
      name: "{{ retronas_user }}"
      groups: dialout
      append: yes

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "tcpser"
    module_state: "present"