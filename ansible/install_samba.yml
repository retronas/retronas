- hosts: localhost
  gather_facts: no
  
  vars:
    - my_name: "Samba"

    - my_packages:
      - avahi-daemon
      - samba
      - samba-vfs-modules

    - my_services:
      - avahi-daemon
      - smbd
      - nmbd

    - config_opts:
      - { section: "global", option: "min protocol",              value: "CORE"}
      - { section: "global", option: "netbios name",              value: "retrosmb"}
      - { section: "global", option: "lanman auth",               value: "yes"}
      - { section: "global", option: "client lanman auth",        value: "yes"}
      - { section: "global", option: "ntlm auth",                 value: "yes"}
      - { section: "global", option: "client ntlm auth",          value: "yes"}
      - { section: "global", option: "ntlmv2 auth",               value: "yes"}
      - { section: "global", option: "client ntlmv2 auth",        value: "yes"}
      - { section: "global", option: "unix extensions",           value: "no"}
      - { section: "global", option: "allow insecure wide links", value: "yes"}
      - { section: "global", option: "socket options",            value: "TCP_NODELAY IPTOS_LOWDELAY SO_KEEPALIVE"}
      - { section: "global", option: "strict locking",            value: "no"}
      - { section: "global", option: "strict sync",               value: "no"}
      - { section: "global", option: "sync always",               value: "no"}
      - { section: "global", option: "deadtime",                  value: "20"}

    - changed: false

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - install from repos"
    ansible.builtin.package:
       name: "{{ my_packages }}"
       state: latest

  - name: "{{ my_name }} - configure samba config"
    ansible.builtin.ini_file:
      path: /etc/samba/smb.conf
      section: "{{ item.section }}"
      option: "{{ item.option }}"
      value: "{{ item.value }}"
    with_items: "{{ config_opts }}"

  - name: "{{ my_name }} - configure includes file"
    ansible.builtin.ini_file:
      path: /etc/samba/smb.conf
      section: retronas
      option: "include"
      value: "/etc/samba/retronas.conf"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - configure retro shares"
    ansible.builtin.template:
      src: templates/install_samba/retronas.conf.j2
      dest: /etc/samba/retronas.conf
      owner: root
      group: root
      mode: '0644'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items: "{{ my_services }}"

  - name: "{{ my_name }} - restart if imported because handlers will not run"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      enabled: yes
    with_items: "{{ my_services }}"
    when: changed is true

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
    with_items: "{{ my_services }}"

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "samba"
    module_state: "present"