- ansible.builtin.import_role:
    name: retronas.role.package.latest

- name: "{{ my_name }} - configure samba config"
  ansible.builtin.ini_file:
    path: /etc/samba/smb.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ config_opts }}"

- name: "{{ my_name }} - configure includes file"
  ansible.builtin.ini_file:
    path: /etc/samba/smb.conf
    section: retronas
    option: "include"
    value: "/etc/samba/retronas.conf"
  notify: "{{ my_name }} - Restart service"

- name: "{{ my_name }} - configure retro shares"
  ansible.builtin.template:
    src: templates/install_samba/retronas.conf.j2
    dest: /etc/samba/retronas.conf
    owner: root
    group: root
    mode: '0644'
  notify: "{{ my_name }} - Restart service"

- name: "{{ my_name }} - enable startup services"
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ my_services }}"

- name: "{{ my_name }} - restart if imported because handlers will not run"
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items: "{{ my_services }}"
  when: changed is true

#
# FIREWALL
#
- name: "{{ my_name }} - checking firewall rule"
  ansible.builtin.stat:
    path: /etc/firewalld/services
  register: firewalld_services

- name: "{{ my_name }} - enable firewall rule"
  ansible.posix.firewalld:
    zone: "{{ item.zone | default('retro') }}"
    service: "{{ item.service | default('samba') }}"
    permanent: true
    state: enabled
    immediate: true
  with_items: "{{ firewalld_rules }}"
  when: firewalld_services.stat.exists
