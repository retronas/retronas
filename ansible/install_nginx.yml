# Dependencies
- import_playbook: install_sslcert.yml

- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "nginx"
    - my_file: "install_{{ my_name }}"

    - packages:
      - { name: "lighttpd", state: "absent" }
      - { name: "{{ my_name }}", state: "latest" }

    - templates:
      - { name: "99-retronas.conf", dest: "/etc/{{ my_name }}/sites-available", mode: "0640"}

    - sites_disable:
      - "default"

    - sites_enable:
      - "99-retronas.conf"

    - systemd_units:
      - { name: "nginx", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - name: "{{ my_name }} - manage packages"
    package:
       name: "{{ item.name }}"
       state: "{{ item.state }}"
    with_items: "{{ packages }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - templates"
    template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
      force: "{{ item.force|default('yes') }}"
    with_items: "{{ templates }}"

  - name: "{{ my_name }} - enable sites"
    file:
      src: /etc/{{ my_name }}/sites-available/{{ item }}
      dest: /etc/{{ my_name }}/sites-enabled/{{ item }}
      state: "link"
    with_items: "{{ sites_enable }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - update runas user"
    lineinfile:
      path: /etc/{{ my_name }}/{{ my_name }}.conf
      regexp: '^user\s[a-z-]+;$'
      line: user {{ retronas_user }};
      state: present
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    service:
      name: "{{ item.name }}"
      state: "{{ item.state }}"
      enabled: "{{ item.enabled }}"
    with_items: "{{ systemd_units }}"

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ item.name }}"
      state: restarted
    with_items: "{{ systemd_units }}"
    when: item.restart == "yes"

- import_playbook: retronas_system_config.yml
  vars:
    module_name: "nginx"
    module_state: "present"