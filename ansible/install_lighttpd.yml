- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "lighttpd"
    - my_file: "install_{{ my_name }}"

    - packages:
      - { name: "nginx", state: "absent" }
      - { name: "{{ my_name }}", state: "latest" }

    - config_settings_absent:
      - { section: null, option: "server.document-root"}
      - { section: null, option: "server.username"}
      - { section: null, option: "server.groupname"}

    - templates:
      - { name: "99-retronas.conf", dest: "/etc/{{ my_name }}/conf-available", mode: "0640"}

    - conf_enable:
      - "99-retronas.conf"

    - systemd_units:
      - { name: "{{ my_name }}", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - manage packages"
    ansible.builtin.package:
       name: "{{ item.name }}"
       state: "{{ item.state }}"
    with_items: "{{ packages }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - configure main config"
    ansible.builtin.ini_file:
      path: /etc/{{ my_name }}/{{ my_name }}.conf
      section: "{{ item.section }}"
      option: "{{ item.option }}"
      state: absent
    with_items: "{{ config_settings_absent }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - templates"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
      force: "{{ item.force|default('yes') }}"
    with_items: "{{ templates }}"

  - name: "{{ my_name }} - enable conf"
    ansible.builtin.file:
      src: /etc/{{ my_name }}/conf-available/{{ item }}
      dest: /etc/{{ my_name }}/conf-enabled/{{ item }}
      state: "link"
    with_items: "{{ conf_enable }}"

  - name: "{{ my_name }} - set logfile permissions"
    ansible.builtin.file:
      path: /var/log/{{ my_name }}
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      state: directory
      recurse: yes

  - name: "{{ my_name }} - set run dir permissions"
    ansible.builtin.file:
      path: /var/run/{{ my_name }}
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      state: directory
      recurse: yes

  - name: "{{ my_name }} - configure server.errorlog"
    ansible.builtin.ini_file:
      path: /etc/{{ my_name }}/{{ my_name }}.conf
      section: null
      option: server.errorlog
      state: absent
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    ansible.builtin.service:
      name: "{{ item.name }}"
      state: "{{ item.state }}"
      enabled: "{{ item.enabled }}"
    with_items: "{{ systemd_units }}"

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item.name }}"
      state: restarted
    with_items: "{{ systemd_units }}"
    when: item.restart == "yes"

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "lighttpd"
    module_state: "present"