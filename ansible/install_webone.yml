---
# Dependencies
- ansible.builtin.import_playbook: install_dotnetcore6.yml

- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "WebOne proxy"
    - my_file: "install_webone"
    - module_name: "webone"
    - module_state: "present"

    - packages:
      - git
      - imagemagick-6.q16
      - imagemagick-6-common
      - ffmpeg
      - coreutils

    - templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "webone.service", dest: "/usr/lib/systemd/system" }

    - firewalld_ports:
      - { zone: "retro", port: 8080, protocol: tcp }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - Run installer"
    ansible.builtin.shell:
      cmd: "./{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
      chdir: "{{ retronas_root }}/scripts"
      executable: /bin/bash
      creates: "{{ retronas_root }}/bin/webone/webone"
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: webone
      state: restarted
      daemon_reload: yes