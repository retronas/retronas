---
- hosts: localhost
  gather_facts: no

  vars:
    my_name: "FSP for Swiss"
    my_file: "install_fsp"
    my_service: "fspd"
    module_name: "fsp"

    packages:
      - python3
      - python-is-python3
      - build-essential
      - flex
      - gcc
      - scons

    swiss_rw:
      - .FSP_OK_ADD
      - .FSP_OK_DEL
      - .FSP_OK_MKDIR
      - .FSP_OK_RENAME

    paths:
      - { name: "fsp",      dest: "{{ retronas_root }}/bin/" }
      - { name: "etc",      dest: "{{ retronas_root }}/bin/fsp/" }
      - { name: "gamecube", dest: "{{ retronas_path }}" }
      - { name: "swiss",    dest: "{{ retronas_path }}/gamecube" }
      - { name: "swiss",    dest: "{{ retronas_path }}/gamecube/swiss" }   # ????
      - { name: "tmp",      dest: "{{ retronas_path }}/gamecube/swiss" }

    templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "{{ my_service }}.conf", dest: "{{ retronas_root }}/bin/fsp/etc" }
      - { name: "fspd.service", dest: "/usr/lib/systemd/system/" }

    firewalld_ports:
      - { port: 2121, protocol: udp }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Load RetroNAS systems"
    ansible.builtin.include_vars: retronas_systems.yml

  - ansible.builtin.import_role:
      name: retronas.role.romdir

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths
      
  - name: "{{ my_name }} - build layout"
    ansible.builtin.file:
      src: "../../roms/{{ item.src }}"
      dest: "{{ retronas_path }}/gamecube/swiss/{{ item.fspd }}"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      state: link
    loop: "{{ system_nintendo }}"
    when:
      item.fspd | length > 0
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - name: "{{ my_name }} - Install from source code"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    #args:
      #creates: "{{ retronas_root}} /bin/fsp"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - Set write permissions top level"
    ansible.builtin.copy:
      content: ""
      dest: "{{ retronas_path }}/gamecube/{{ item.0 }}/{{ item.1 }}"
      force: no
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      mode: 0644
    with_nested: 
      - ["swiss", "swiss/swiss" ]
      - "{{ swiss_rw }}"

  - name: "{{ my_name }} - enable startup service"
    ansible.builtin.service:
      name: "{{ my_service }}"
      state: started
      enabled: yes
      daemon_reload: yes

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ my_service }}""
      state: restarted
      daemon_reload: yes