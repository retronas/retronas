- hosts: localhost
  gather_facts: no

  vars:
    my_name: "ethflopd"
    my_file: "install_{{ my_name }}"
    module_name: "ethflopd"

    packages:
      - make
      - automake
      - autoconf
      - gcc
      - g++
      - git
      - build-essential
      - coreutils

    paths:
      - { name: "dos", dest: "{{ retronas_path }}", state: "directory", owner: "{{ retronas_user }}", group: "{{ retronas_group }}", mode: "0755" }

    templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "ethflopd.service", dest: "/usr/lib/systemd/system/" }


  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - name: "{{ my_name }} - Install from source code"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "{{ retronas_root }}/bin/{{ my_name }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup service"
    ansible.builtin.service:
      name: "{{ my_name }}.service"
      state: started
      enabled: yes
      daemon_reload: yes

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ my_name }}.service"
      state: restarted
      daemon_reload: yes