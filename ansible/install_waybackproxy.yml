---
- hosts: localhost
  gather_facts: no

  vars:
    my_name: "waybackproxy"
    my_file: "install_{{ my_name }}"
    my_dir: "/opt/{{ my_name }}"
    module_name: "waybackproxy"

    systemd_units:
      - { name: "{{ my_name }}", type: 'service', state: "started", enabled: "no", restart: "yes", instance: "no" }

    templates:
      - { name: "config.json", dest: "{{ my_dir }}" }
      - { name: "{{ my_name }}.service", dest: "/etc/systemd/system" }
      - { name: "install_waybackproxy.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }

    packages:
      - git

    paths:
      - { name: "{{ my_name }}", dest: "/opt",                state: "directory", mode: "0755" }

    firewalld_ports:
      - { zone: "retro", port: 8888, protocol: tcp }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - name: "{{ my_name }} - Install"
    shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "/opt/{{ my_name }}/{{ my_name }}.py"

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ my_name }}.service"
      state: restarted
      daemon_reload: yes