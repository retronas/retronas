---
- hosts: localhost

  vars:
    my_name: "zterm"
    my_file: "install_{{ my_name }}"
    module_name: "zterm"
    append_user_group: dialout

    systemd_units:
      - { name: "zterm", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }

    packages:
      - make
      - cmake
      - git
      - build-essential
      - lrzsz

    templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "zterm.service", dest: "/usr/lib/systemd/system" }

  tasks:

  - name: "{{ my_name }} - Include systems map"
    ansible.builtin.include_vars: "retronas_systems.yml"

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.update-user

  - name: "{{ my_name }} - Install from source code"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "{{ retronas_root}} /opt/zterm/zterm"

  - name: "{{ my_name }} - enable service(s)"
    ansible.builtin.service:
      name: "{{ item.name }}.{{ item.type }}"
      state: "{{ item.state }}"
      enabled: "{{ item.enabled }}"
      daemon_reload: yes
    with_items:
      "{{ systemd_units }}"
    when:
      - item.instance == 'no'
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item.name }}.{{ item.type }}"
      state: restarted
      daemon_reload: yes
    with_items:
      "{{ systemd_units }}"
    when: 
      - item.restart == 'yes'
      - item.instance == 'no'

  - name: "{{ my_name }} - Restart instances"
    ansible.builtin.service:
      name: "{{ item.1.name }}{{ item.0.dest }}.{{ item.1.type }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - "{{ system_map }}"
      - "{{ systemd_units }}"
    when: 
      - item.1.restart == 'yes'
      - item.1.instance == 'yes'