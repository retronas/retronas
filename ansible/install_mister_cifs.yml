# Dependencies
- import_playbook: install_romdir.yml
- import_playbook: install_extradirs.yml
- import_playbook: install_samba.yml

- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "MiSTer CIFS"
    - my_file: "install_mister_cifs"

    - top_level_paths:
      - { name: "games",      enabled: yes,  generic: "roms",        systems: yes }
      - { name: "saves",      enabled: yes,  generic: "saves",       systems: yes }
      - { name: "savestates", enabled: yes,  generic: "savestates",  systems: yes }
      - { name: "BIOS",       enabled: yes,  generic: "bios",        systems: yes }
      - { name: "wallpapers", enabled: yes,  generic: "wallpapers",  systems: no  }

    - save_overrides:
      - { name: "GAMEBOY2P", src: "nintendo/gameboy2p" }
      - { name: "GBA2P", src: "nintendo/gameboyadvance2p" }

    - templates:
      - { name: "retronas_mister.conf", dest: "/etc/samba" }
      - { name: "retronas-mister-dirs.service", dest: "/etc/systemd/system" }
      - { name: "retronas-mister-dirs.timer", dest: "/etc/systemd/system" }

    - systemd_units:
      - { name: "retronas-mister-dirs", type: 'service', state: "stopped", enabled: "no", restart: "no", instance: "no" }
      - { name: "retronas-mister-dirs", type: 'timer',   state: "stopped", enabled: "no", restart: "no", instance: "no" }

    - dirs_only: false

  tasks:

  - name: "{{ my_name }} - Include systems map"
    include_vars: "retronas_systems.yml"

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - name: "{{ my_name }} - build top level"
    file:
      path: "{{ retronas_path }}/mister"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      state: directory
      mode: "0775"

  - name: "{{ my_name }} - build top level share paths"
    file:
      path: "{{ retronas_path }}/mister/{{ item.name }}"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      state: directory
      mode: "0775"
    with_items:
      "{{ top_level_paths }}"
    when: 
      - item.enabled is true

  - name: "{{ my_name }} - build layout list (set fact)"
    set_fact:
      path_list: "{{ path_list|default([]) + [ 'ln -sf ../../' + item.1.generic|lower + '/' + item.0.src + ' ' + retronas_path + '/mister/' + item.1.name + '/' + item.0.mister + ';' ] }}"
    loop: "{{ system_map|product(top_level_paths)|list }}"
    when:
      - item.1.enabled is true
      - item.0.mister | length > 0
      - item.1.systems is true

  - name: "{{ my_name }} - build systems directory layout"
    shell:
      cmd: "{{ path_list|join('') }}"
    when: path_list is defined

  - name: "{{ my_name }} - create custom save directories"
    file:
      dest: "{{ retronas_path }}/{{ item.1 }}/{{ item.0.src|lower }}"
      state: directory
    with_nested: 
      - "{{ save_overrides }}"
      - ["saves", "savestates"]

  - name: "{{ my_name }} - create custom save links"
    file:
      src: "../../{{ item.1 }}/{{ item.0.src|lower }}"
      dest: "{{ retronas_path }}/mister/{{ item.1 }}/{{ item.0.name }}"
      state: link
    with_nested: 
      - "{{ save_overrides }}"
      - ["saves", "savestates"]

  - name: "{{ my_name }} - templates"
    template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
      force: "{{ item.force|default('yes') }}"
    with_items: "{{ templates }}"
    when: dirs_only is false
    notify: 
      - "{{ my_name }} daemon-reload"
      - "{{ my_name }} - Install Samba"

  - name: "{{ my_name }} - configure includes file"
    ini_file:
      path: /etc/samba/smb.conf
      section: mister
      option: "include"
      value: "/etc/samba/retronas_mister.conf"
    when: dirs_only is false
    notify: "{{ my_name }} - Install Samba"

  handlers:

  - name: "{{ my_name }} daemon-reload"
    systemd:
      daemon_reload: yes

  - name: "{{ my_name }} - Install Samba"
    set_fact:
      install_changed: true

- import_playbook: install_samba.yml
  vars:
    changed: "{{ install_changed }}"
  when: install_changed is defined and
        install_changed is true

- import_playbook: retronas_system_config.yml
  vars:
    module_name: "mister_cifs"
    module_state: "present"