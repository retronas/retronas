# Dependencies
- ansible.builtin.import_playbook: install_romdir.yml
- ansible.builtin.import_playbook: install_x11vnc.yml

- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "adtpro"
    - my_file: "install_{{ my_name }}"
    - my_dir: /opt/adtpro

    - systemd_units:
      - { name: "adtpro", type: 'service', state: "stopped", enabled: "no", restart: "no", instance: "no" }

    - packages:
      - default-jre
      - xvfb
      - x11vnc

    - templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "ADTPro.properties", dest: "{{ my_dir }}", force: no}
      - { name: "adtpro_retronas.sh", dest: "{{ my_dir }}",  mode: "0755"}

    - paths:
      - { name: "{{ my_name }}", dest: "/opt",                state: "directory", mode: "0755"}
      #- { name: "{{ my_name }}", dest: "{{ retronas_path }}", state: "directory", mode: "0755"}

  tasks:

  - name: "{{ my_name }} - Include systems map"
    ansible.builtin.include_vars: "retronas_systems.yml"

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install build tools"
    ansible.builtin.package:
       name: "{{ packages }}"
       state: latest

  - name: "{{ my_name }} - paths"
    ansible.builtin.file:
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0755') }}"
      state: "{{ item.state|default('directory') }}"
    with_items: "{{ paths }}"

  - name: "{{ my_name }} - disks symlink"
    ansible.builtin.file:
      src: "roms/apple/appleii"
      dest: "{{ retronas_path }}/{{ my_name }}"
      state: "link"

  - name: "{{ my_name }} - templates"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
      force: "{{ item.force|default('yes') }}"
    with_items: "{{ templates }}"

  - name: "{{ my_name }} - Install"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "{{ retronas_root}} {{ my_dir }}/adtpro.sh"

  - name: "{{ my_name }} - create startup service(s) instance"
    ansible.builtin.template:
      src: templates/{{ my_file }}/{{ item.name }}.{{ item.type }}.j2
      dest: /usr/lib/systemd/system/{{ item.name }}@.{{ item.type }}
      owner: root
      group: root
      mode: 0644
    with_items: "{{ systemd_units }}"
    notify: "{{ my_name }} daemon-reload" 

  handlers:
    - name: "{{ my_name }} daemon-reload"
      ansible.builtin.systemd:
        daemon_reload: yes

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "adtpro"
    module_state: "present"