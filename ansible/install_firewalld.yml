---
- hosts: localhost
  gather_facts: no

  vars:
    my_name: "firewalld"
    my_file: "install_{{ my_name }}"
    my_services: "firewalld.service"
    module_name: "firewalld"

    templates:
      - { name: "clear-python-bytecode",    sub: "workarounds", dest: "/usr/local/sbin",              mode: '0750' }
      - { name: "override.conf",            sub: "workarounds", dest: "/etc/systemd/system" }

    paths:
      - { name: "{{ my_name }}",               dest: "/etc",                  state: "directory", mode: "0750" }
      - { name: "{{ my_name }}.service.d",     dest: "/etc/systemd/system/",  state: "directory", mode: "0750" }

    packages: 
      - firewalld
      - python3-firewall

    collections:
      - { collection: ansible.posix, creates: ansible/posix }

  tasks:
  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - install related ansible collections"
    ansible.builtin.command:
      cmd: /usr/bin/ansible-galaxy collection install {{ item.collection }}
      creates: /opt/retronas/ansible/collections/ansible_collections/{{ item.creates }}
    with_items: "{{ collections }}"

 - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:
  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
      enabled: yes
      force: yes
    with_items: "{{ my_services }}"