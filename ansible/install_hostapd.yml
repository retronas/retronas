# Dependencies

- hosts: localhost
  gather_facts: false

  vars:
    - my_name: "hostapd"
    - my_file: "install_{{ my_name }}"

    # default wifi
    - retronas_wifi_password: "retronas"

    - packages:
      - hostapd

    - my_services: "hostapd-retronas.service"

    - templates:
      - { name: "hostapd-retronas.conf",    sub: "", dest: "/etc/{{ my_name }}", force: no, mode: "0640" }
      - { name: "hostapd-retronas.service", sub: "", dest: "/etc/systemd/system" }
      - { name: "update-wifi-passwd.sh",    sub: "", dest: "/opt/retronas/scripts", mode: "0750" }


  tasks:
  - name: "{{ my_name }}  - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install packages"
    ansible.builtin.package:
       name: "{{ packages }}"
       state: latest

  - name: "{{ my_name }} - templates"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
      force: "{{ item.force|default('yes') }}"
    with_items: "{{ templates }}"

  - name: "{{ my_name }} - enable"
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
      daemon_reload: yes
    with_items: "{{ my_services }}"

  handlers:
  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items: "{{ my_services }}"

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "hostapd"
    module_state: "present"