- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "Deluge"
    - my_file: "install_deluge"
    - module_name: "bittorrent"

    - packages:
      - geoip-bin
      - geoip-database
      - deluged
      - deluge-web
      - deluge-console

    - systemd_units:
      - { name: "deluged",    type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }
      - { name: "deluge-web", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }

    - paths:
      - { name: "deluged",      dest: "/var/lib",                       owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "config",       dest: "/var/lib/deluged",               owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "bittorrent",   dest: "{{ retronas_path }}",            owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "torrents",     dest: "{{ retronas_path }}/bittorrent", owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "auto-add",     dest: "{{ retronas_path }}/bittorrent", owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "downloading",  dest: "{{ retronas_path }}/bittorrent", owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }
      - { name: "complete",     dest: "{{ retronas_path }}/bittorrent", owner: "{{ retronas_user }}", group: "{{ retronas_group }}" }

    - templates:
      - { name: "autoadd.conf",       dest: "/var/lib/deluged/config" }
      - { name: "deluged",            dest: "/etc/default" }
      - { name: "core.conf",          dest: "/var/lib/deluged/config" }
      - { name: "auth",               dest: "/var/lib/deluged/config" }
      - { name: "upgrade_deluge.sh",  dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "deluged.service",    dest: '/usr/lib/systemd/system' }
      - { name: "deluge-web.service", dest: '/usr/lib/systemd/system' }

    - firewalld_ports:
      - { zone: retro, port: "8112", protocol: "tcp" }
      - { zone: modern, port: "8112", protocol: "tcp" }
      - { zone: retro, port: "58846", protocol: "tcp" }
      - { zone: modern, port: "58846", protocol: "tcp" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - firewalld"
    ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - name: "{{ my_name }} -remove legacy deluged startup file"
    file:
      path: "/etc/init.d/deluged"
      state: absent

  - name: "{{ my_name }} - enable service(s)"
    ansible.builtin.service:
      name: "{{ item.name }}.{{ item.type }}"
      state: "{{ item.state }}"
      enabled: "{{ item.enabled }}"
      daemon_reload: yes
    with_items: "{{ systemd_units }}"
    when:
      - item.instance == 'no'
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item.name }}.{{ item.type }}"
      state: restarted
      daemon_reload: yes
    with_items: "{{ systemd_units }}"
    when: 
      - item.restart == 'yes'
      - item.instance == 'no'