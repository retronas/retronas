- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "hdparm"
    - my_file: "install_{{ my_name }}"

    - my_packages:
         - hdparm
         - coreutils

    - scripts:
      - "{{ my_name }}.sh"
      - "{{ my_name }}-manager.sh"

    - symlinks:
      - hdparm-manager-disable-apm
      - hdparm-manager-disable-standby
      - hdparm-manager-start-service
      - hdparm-manager-query-service
      - hdparm-manager-stop-service
      - hdparm-manager-drive-selector

    - systemd_units:
      - { name: "{{ my_name }}", type: "timer", state: "stopped", instance: "no", enabled: "no", restart: "no" }
      - { name: "{{ my_name }}", type: "service", state: "stopped", instance: "no", enabled: "no", restart: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install from repos"
    ansible.builtin.package:
       name: "{{ my_packages }}"
       state: latest
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - check dir"
    ansible.builtin.file:
      path: /usr/lib/systemd/system
      owner: root
      group: root
      mode: 0755
      state: directory

  - name: "{{ my_name }} - install script"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ item }}.j2"
      dest: "{{ retronas_root }}/scripts/{{ item }}"
      owner: root
      group: root
      mode: '0755'
    with_items:
      - "{{ scripts }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - create startup service"
    ansible.builtin.template:
      src: templates/{{ my_file }}/{{ item.name }}.{{ item.type }}.j2
      dest: /usr/lib/systemd/system/{{ item.name }}.{{ item.type }}
      owner: root
      group: root
      mode: 0644
    with_items:
      - "{{ systemd_units }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - create symlinks for webui"
    ansible.builtin.file:
      src: "{{ retronas_root }}/scripts/{{ my_name }}-manager.sh"
      dest: "{{ retronas_root }}/scripts/{{ item }}.sh"
      owner: root
      group: root
      state: link
    with_items:
      - "{{ symlinks }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup service"
    ansible.builtin.service:
      name: "{{ item.name }}"
      state: started
      enabled: "{{ item.enabled }}"
      daemon_reload: yes
    with_items:
      - "{{ systemd_units }}"
    when:
      - item.enabled == "yes"

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - "{{ systemd_units }}"
    when:
      - item.restart == "yes"

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "hdparm"
    module_state: "present"