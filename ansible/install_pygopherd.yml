---
- hosts: localhost
  gather_facts: no

  vars:
    my_name: "pygopherd"
    my_file: "install_pygopherd"
    module_name: "pygopherd"

    packages:
      - python3

    templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "{{ my_name }}.conf", dest: "{{ retronas_root }}/etc" }
      - { name: "{{ my_name }}.service", dest: "/usr/lib/systemd/system" }

    firewalld_ports:
      - { port: 70, protocol: tcp }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - build source"
    ansible.builtin.command:
      cmd: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      creates: "opt/pygopherd/bin/pygopherd"
    notify: "{{ my_name }} - Restart service"

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - "{{ my_name }}"