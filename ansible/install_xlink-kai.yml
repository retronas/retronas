---
- hosts: localhost
  gather_facts: no
  become: yes

  # https://dist.teamxlink.co.uk/

  vars:
    - my_name: "xlink-kai"
    - my_file: "install_xlink-kai"
    - my_keyrings: "/etc/apt/keyrings"
    - my_key: "{{ my_keyrings }}/teamxlink.gpg"
    - my_repo: "https://dist.teamxlink.co.uk/linux/debian"
    - module_name: "xlink-kai"
    - module_state: "present"

    - prerequisite_packages: 
        - ca-certificates
        - gnupg
        - curl

    - packages:
        - xlinkkai

    - templates:
      - { name: "{{ my_name }}.service", dest: "/etc/systemd/system" }

    - firewalld_ports:
      - { zone: "modern", port: 30000, protocol: udp }
      - { zone: "retro", port: 34522, protocol: tcp }
      - { zone: "modern", port: 34522, protocol: tcp }


  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - clean up old key"
    ansible.builtin.shell: "rm -f /usr/share/keyrings/teamxlink.asc"

  - name: "{{ my_name }} - Install prerequisite packages"
    ansible.builtin.package:
      name: "{{ prerequisite_packages }}"
      update_cache: yes

  - name: "{{ my_name }} - Create key dir"
    ansible.builtin.file:
      path: "{{ my_keyrings }}"
      mode: 0755
      owner: root
      group: root
      state: directory

  - name: "{{ my_name }} - Add teamxlink key"
    ansible.builtin.shell:
        cmd: "curl -fsSL {{ my_repo }}/gpg | gpg --dearmor -o {{ my_key }}"
        creates: "{{ my_key }}"

  - name: "{{ my_name }} - Fix perms on file"
    ansible.builtin.file:
      path: "{{ my_key }}"
      mode: 0755
      owner: root
      group: root

  - name: "{{ my_name }} - Add teamxlink repository"
    ansible.builtin.copy:
      dest: "/etc/apt/sources.list.d/teamxlink.list"
      content: |
        deb [signed-by={{ my_key }}] {{ my_repo }}/static/deb/release/ /

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - name: "{{ my_name }} - check for arm build"
    ansible.builtin.stat:
      path: "/usr/bin/kaiengine_arm"
    register: arm_build

  - name: "{{ my_name }} - link arm build"
    ansible.builtin.file:
      src: "/usr/bin/kaiengine_arm"
      dest: "/usr/bin/kaiengine"
      state: link
    when: arm_build.stat.exists is true

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} - Restart service(s)"

  - name: "{{ my_name }} - fix config perms for {{ retronas_user }}"
    ansible.builtin.file:
      path: "/etc/kaiengine.conf"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: '0640'
    notify: "{{ my_name }} - Restart service(s)"

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:
  - name: "{{ my_name }} - Restart service(s)"
    ansible.builtin.service:
      name: "{{ my_name }}.service"
      state: started
      enabled: yes
      daemon_reload: yes