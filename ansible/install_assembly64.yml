---
- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "assembly64"
    - my_file: "install_{{ my_name }}"
    - my_dir: /opt/{{ my_name }}
    - module_name: "assembly64"
    - module_state: "present"

    - packages:
      - xvfb
      - x11vnc

    - templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "{{ my_name }}_retronas.sh", dest: "/opt/{{ my_name }}", mode: "0755" }
      - { name: "{{ my_name }}.service", dest: "/etc/systemd/system", mode: "0644" }

    - paths:
      - { name: "{{ my_name }}", dest: "/opt",                state: "directory", mode: "0755"}
      #- { name: "{{ my_name }}", dest: "{{ retronas_path }}", state: "directory", mode: "0755"}

    - firewalld_ports:
      - { port: 66000, protocol: tcp}

  tasks:

  - name: "{{ my_name }} - Include systems map"
    ansible.builtin.include_vars: "retronas_systems.yml"

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.romdir

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} daemon-reload" 

  - name: "{{ my_name }} - disks symlink"
    ansible.builtin.file:
      src: "roms/apple/appleii"
      dest: "{{ retronas_path }}/{{ my_name }}"
      state: "link"

  - name: "{{ my_name }} - Install"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    args:
      creates: "{{ retronas_root}} {{ my_dir }}/{{ my_file }}.sh"

  - ansible.builtin.import_role:
      name: retronas.role.x11vnc

  - name: "{{ my_name }} - firewalld"
    ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  -  ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:
    - name: "{{ my_name }} daemon-reload"
      ansible.builtin.systemd:
        daemon_reload: yes
