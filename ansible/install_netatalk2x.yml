- hosts: localhost
  gather_facts: yes

  vars:
    - my_name: "Netatalk2.X"
    - my_file: "install_netatalk2x"

    - packages:
       - avahi-daemon
       - build-essential
       - make
       - automake
       - autoconf
       - libdb-dev
       - libdb++-dev
       - libavahi-common-dev
       - libavahi-client-dev
       - libavahi-core-dev
       - libdbus-1-dev
       - libssl-dev
       - autotools-dev
       - libtool
       - libcups2-dev
       - libavahi-client-dev
       - libgcrypt20-dev
       - expect
       - libltdl-dev
       - libtool-bin
       - libevent-dev

    - services:
      - avahi-daemon
      - atalkd
      - afpd
      - papd
      - timelord
      - a2boot

    - templates:
      - { name: "afpexpect.sh", dest: "{{ retronas_root }}/bin/netatalk2x/bin", mode: "0754"}
      - { name: "AppleVolumes.default", dest: "{{ retronas_root }}/bin/netatalk2x/etc/netatalk"}
      - { name: "afpd.conf", dest: "{{ retronas_root }}/bin/netatalk2x/etc/netatalk"}
      - { name: "atalkd.conf", dest: "{{ retronas_root }}/bin/netatalk2x/etc/netatalk"}

  tasks:

  - name: "{{ my_name }}  - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }}  - check if  netatalk package is available"
    ansible.builtin.shell: "/usr/bin/apt-cache search netatalk | grep netatalk"
    register: result
    failed_when:
      - result.rc >= 2

  - name: "{{ my_name }}  - unhold netatalk package"
    ansible.builtin.shell: "/usr/bin/apt-mark unhold netatalk"
    when: result.rc == 0

  - name: "{{ my_name }}  - remove package-based Netatalk"
    ansible.builtin.package:
       name: netatalk
       state: absent

  - name: "{{ my_name }}  - install dependencies"
    ansible.builtin.package:
       name: "{{ packages }}"
       state: latest

  - name: "{{ my_name }} - create install script"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ my_file }}.sh.j2"
      dest: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      owner: root
      group: root
      mode: '0755'

  - name: "{{ my_name }} - install from source"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"

  - name: "{{ my_name }} - templates"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ item.name }}.j2"
      dest: "{{ item.dest }}/{{ item.name }}"
      owner: "{{ item.owner|default('root') }}"
      group: "{{ item.group|default('root') }}"
      mode: "{{ item.mode|default('0644') }}"
    with_items: "{{ templates }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items: "{{ services }}"

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
    with_items: "{{ services }}"

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "netatalk2x"
    module_state: "present"