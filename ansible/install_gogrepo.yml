- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "gogrepo"
    - my_file: "install_gogrepo"
    - module_name: "gogrepo"
    - module_state: "present"

    - packages:
      - python3
      - python-is-python3
      - python3-html5lib
      - git
      - sudo

    - templates:
      - { name: "gogrepo_login.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "gogrepo_import-cookies.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "gogrepo_download.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "gogrepo_update.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}
      - { name: "gogrepo-wrapper.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - name: "{{ my_name }} - create GOG dir"
    ansible.builtin.file:
      path: "{{ retronas_path }}/{{ item }}"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_group }}"
      mode: "0775"
      state: directory
    with_items:
      - gog

  - name: "{{ my_name }} - download gogrepo+patches (sairuk)"
    ansible.builtin.shell:
      chdir: "{{ retronas_root }}/bin"
      cmd: "git clone https://github.com/sairuk/gogrepo.git"
      creates: "{{ retronas_root }}/bin/gogrepo"

  - name: "{{ my_name }} - update gogrepo"
    ansible.builtin.shell: 
      chdir: "{{ retronas_root }}/bin/gogrepo"
      cmd: "git pull"

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - ansible.builtin.import_role:
      name: retronas.role.system-config