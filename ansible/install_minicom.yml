---
- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "minicom"
    - my_file: "install_{{ my_name }}"
    - my_dir: ""
    - module_name: "minicom"
    - append_user_group: "dialout"

    - systemd_units:
      #- { name: "minicom", type: 'service', state: "stopped", enabled: "no", restart: "no", instance: "no" }

    - packages:
      - minicom
      - lrzsz

    - templates:
      - { name: "minirc.dfl", dest: "/etc/minicom", mode: "0644", owner: "{{ retronas_user }}", group: "{{ retronas_user }}", force: no }
      - { name: "minicom.sh", dest: "{{ retronas_root }}/scripts", mode: "0755"}

    - script_links:
      - { dest: "minicom-config.sh", src: "minicom.sh" }

    - paths:
      - { name: "{{ my_name }}", dest: "/etc", state: "directory", mode: "0755", owner: "{{ retronas_user }}", group: "{{ retronas_user }}" }
      - { name: "{{ my_name }}", dest: "{{ retronas_path }}", state: "directory", mode: "0755", owner: "{{ retronas_user }}", group: "{{ retronas_user }}"}

  tasks:

  - name: "{{ my_name }} - Include systems map"
    ansible.builtin.include_vars: "retronas_systems.yml"

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - ansible.builtin.import_role:
      name: retronas.role.update-user

  - name: "{{ my_name }} - script links" 
    ansible.builtin.file:
      dest: "{{ retronas_root }}/scripts/{{ item.dest }}"
      src: "{{ retronas_root }}/scripts/{{ item.src }}"
      state: link
    with_items: "{{ script_links }}"

  - ansible.builtin.import_role:
      name: retronas.role.system-config