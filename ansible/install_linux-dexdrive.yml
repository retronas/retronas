---
- hosts: localhost
  gather_facts: no

  vars:
    my_name: "linux-dexdrive"
    my_file: "install_{{ my_name }}"
    module_name: "linux-dexdrive"

    packages:
      - git 
      - build-essential

    templates:
      - { name: "{{ my_file }}.sh",   dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "makefile.patch",     dest: "/tmp" }
      - { name: "dexdrive_dumper.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "{{ my_name }}.service", dest: "/etc/systemd/system" }

    systemd_units:
      - { name: "{{ my_name }}", type: 'service', state: "stopped", enabled: "no", restart: "no", instance: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Load RetroNAS systems"
    ansible.builtin.include_vars: retronas_systems.yml

  - ansible.builtin.import_role:
      name: retronas.role.romdir

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.templates
    notify: "{{ my_name }} daemon-reload" 

  - name: "{{ my_name }} - build source"
    ansible.builtin.shell:
      cmd: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      creates: "/usr/local/bin/dexattach"

  - name: "{{ my_name }} - dexdrive module"
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/modules.conf
      regex: "^dexdrive$"
      line: "dexdrive"

  - name: "{{ my_name }} - {{ retronas_user }} groups"
    ansible.builtin.user:
      name: "{{ retronas_user }}"
      group: "disk"
      append: yes

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:
  - name: "{{ my_name }} daemon-reload"
    ansible.builtin.systemd:
      daemon_reload: yes