# Dependencies
- ansible.builtin.import_playbook: install_filesystems.yml
- ansible.builtin.import_playbook: install_apt-backports.yml

- hosts: localhost
  gather_facts: yes

  vars:
    - my_name: "Cockpit"
    - my_file: "install_cockpit"
    - my_service: "cockpit"

    - my_packages:
      - cockpit
      - cockpit-storaged
      - cockpit-networkmanager

    - firewalld_rules:
      - { zone: "retro" }
      - { zone: "modern" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml
 
  - name: "{{ my_name }} - Install from repo"
    ansible.builtin.apt:
       name: "{{ my_packages }}"
       state: latest
       default_release: "{{ ansible_distribution_release }}-backports"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup services"
    ansible.builtin.service:
      name: "{{ my_service }}"
      state: started
      enabled: yes
      daemon_reload: yes

  #
  # FIREWALL
  #
  - name: "{{ my_name }} - checking firewall rule"
    ansible.builtin.stat:
      path: /etc/firewalld/services
    register: firewalld_services

  - name: "{{ my_name }} - enable firewall rule"
    ansible.posix.firewalld:
      zone: "{{ item.zone | default('retro') }}"
      service: "{{ item.service | default('cockpit') }}"
      permanent: true
      state: enabled
      immediate: true
    with_items: "{{ firewalld_rules }}"
    when: firewalld_services.stat.exists

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ my_service }}"
      state: restarted
      daemon_reload: yes

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "cockpit"
    module_state: "present"