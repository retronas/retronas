---
- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "TNFS Atari 8-bit and ZX Spectrum"
    - my_file: "install_tnfs"

    - my_packages:
      -  build-essential

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - name: "{{ my_name }} - Install build tools"
    ansible.builtin.package:
       name: "{{ my_packages }}"
       state: latest

  - name: "{{ my_name }} - Generate install scripts"
    ansible.builtin.template:
      src: "templates/{{ my_file }}/{{ my_file }}.sh.j2"
      dest: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
      owner: root
      group: root
      mode: 0755

  - name: "{{ my_name }} - Install from source code"
    ansible.builtin.shell: "{{ retronas_root }}/scripts/{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
    #args:
      #creates: "{{ retronas_root}}/bin/tnfs"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - create startup service"
    ansible.builtin.template:
      src: templates/{{ my_file }}/tnfsd.service.j2
      dest: /usr/lib/systemd/system/tnfsd.service
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable startup service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
      daemon_reload: yes
    with_items:
      - tnfsd

  handlers:

  - name: "{{ my_name }} - Restart service"
    ansible.builtin.service:
      name: "{{ item }}"
      state: restarted
      daemon_reload: yes
    with_items:
      - tnfsd

- ansible.builtin.import_playbook: retronas_system_config.yml
  vars:
    module_name: "tnfs"
    module_state: "present"