- hosts: localhost
  gather_facts: no

  vars:
    - my_name: "netlink"
    - my_file: "install_netlink"
    - module_name: "netlink"

    - packages:
      - curl
      - unzip
      - dnsmasq 
      - dnsutils 
      - libnetfilter-queue-dev
      - libnetfilter-queue1 
      - ppp
      - arping 
      - nftables 
      - tcpd 
      - wvdial 
      - python3-pip

    - templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "{{ my_name }}.service", dest: "/etc/systemd/system" }
      - { name: "{{ my_name }}.conf", dest: "/etc/dnsmasq.d" }
      - { name: "{{ my_name }}.patch", dest: "/tmp" }

    - paths:
      - { name: "dnsmasq.d", dest: "/etc" }

    - firewalld_ports:
      - { zone: modern, port: 65432, protocol: tcp }
      - { zone: modern, port: 20001, protocol: udp }
      - { zone: modern, port: 20002, protocol: udp }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    ansible.builtin.include_vars: retronas_vars.yml

  - ansible.builtin.import_role:
      name: retronas.role.package.latest

  - ansible.builtin.import_role:
      name: retronas.role.paths

  - ansible.builtin.import_role:
      name: retronas.role.templates

  - name: "{{ my_name }} - Run installer"
    ansible.builtin.shell:
      cmd: "./{{ my_file }}.sh 2>&1 | tee {{ retronas_root }}/log/{{ my_file }}.log"
      chdir: "{{ retronas_root }}/scripts"
      executable: /bin/bash
    notify: "{{ my_name }} Restart Services"

  - name: "{{ my_name }} - Patch com port range detection"
    ansible.builtin.patch:
      src: /tmp/{{ my_name }}.patch
      dest: /opt/{{ my_name }}/tunnel.py

  - ansible.builtin.import_role:
      name: retronas.role.firewalld.port

  - ansible.builtin.import_role:
      name: retronas.role.system-config

  handlers:
  - name: "{{ my_name }} Restart Services"
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
      daemon_reload: yes
    with_items:
      - "{{ my_name }}.service"