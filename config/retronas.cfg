#!/bin/bash

# Dont allow unbound vars, this should be default eventually
set -u

# Set paths
export RNDIR=/opt/retronas
export USER_CONFIG=${RNDIR}/etc
export ANDIR=${RNDIR}/ansible
export ANCFG=${ANDIR}/retronas_vars.yml
export ANSIBLE_CONFIG=${ANDIR}/ansible.cfg
export DIDIR=${RNDIR}/dialog
export SCDIR=${RNDIR}/scripts
export PCHDIR=${SCDIR}/patch/
export LANGDIR=${RNDIR}/lang
export LIBDIR=${RNDIR}/lib
export LOGDIR=${RNDIR}/log
export CONFIGDIR=${RNDIR}/config
export TDIR=/dev/shm/retronas
export RNLANG="en"
export RNJSONOLD=/opt/retronas/config/retronas.json
export RNJSON=/opt/retronas/config/menu

# migrate to using etc for user config
export OLDAGREEMENT=${RNDIR}/user_agreement
export AGREEMENT=${USER_CONFIG}/user_agreement

[ -d "${TDIR}" ] && rm -rf "${TDIR}" 2>/dev/null
mkdir -p "${TDIR}" 2>/dev/null

# RetroNAS menu geometry
export MH="80"
export MW="24"
export MG="${MW} ${MH}"

if [ -f "${ANCFG}" ]
then
    # Find the current config items
    export OLDRNUSER="$( awk '/^retronas_user:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRNGROUP="$( awk '/^retronas_group:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRNPATH="$( awk '/^retronas_path:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRNBRANCH=$(cd ${RNDIR};git branch | awk '/\*/{print $2}')

    # network bits
    export OLD3DSIF=$( awk '/retronas_net_3dsqr_interface:/{gsub(/"/,"");print $2}' ${ANCFG} )
    export OLDETHERDFSIF=$( awk '/retronas_etherdfs_interface:/{gsub(/"/,"");print $2}' ${ANCFG} )
    export OLDRETROIF="$( awk '/^retronas_net_retro_interface:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDMODERNIF="$( awk '/^retronas_net_modern_interface:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETRODHCP="$( awk '/^retronas_net_retro_dhcprange:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETROROUTER="$( awk '/^retronas_net_retro_router:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETRONTP="$( awk '/^retronas_net_retro_ntp:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETRODNS="$( awk '/^retronas_net_retro_dns:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETROIP="$( awk '/^retronas_net_retro_ip:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDRETROSUBNET="$( awk '/^retronas_net_retro_subnet:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDUPDNS1="$( awk '/^retronas_net_upstream_dns1:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDUPDNS2="$( awk '/^retronas_net_upstream_dns2:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIINT="$( awk '/^retronas_net_wifi_interface:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFISSID="$( awk '/^retronas_net_wifi_ssid:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFICHANNEL="$( awk '/^retronas_net_wifi_channel:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIHWMODE="$( awk '/^retronas_net_wifi_hwmode:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFICC="$( awk '/^retronas_net_wifi_countrycode:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIIP="$( awk '/^retronas_net_wifi_ip:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFISUBNET="$( awk '/^retronas_net_wifi_subnet:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIDHCP="$( awk '/^etronas_net_wifi_dhcprange:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIROUTER="$( awk '/^retronas_net_wifi_router:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFINTP="$( awk '/^retronas_net_wifi_ntp:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDWIFIDNS="$( awk '/^retronas_net_wifi_dns:/{gsub(/"/,"");print $2}' ${ANCFG} )"

    # GOG Settings
    export OLDGOGOS="$( awk -F': ' '/^retronas_gog_os:/{gsub(/"/,"");print $2}' ${ANCFG} )"
    export OLDGOGLANG="$( awk -F': ' '/^retronas_gog_lang:/{gsub(/"/,"");print $2}' ${ANCFG} )"

fi

# Find IPs
#export MY_IPS=$( ip a | grep 'inet ' | awk '/inet/{print $2}' | awk -F '/' '{print $1}' | grep -v ^127  )
export MY_IPV4=$( ip -4 -br a | awk '!/127/{sub(/\/[0-9].+$/, ""); print $3}' )
export MY_IPV6=$( ip -6 -br a | awk '!/::1/{sub(/\/[0-9].+$/, ""); print $3}' )
export MY_IPS=( $MY_IPV4 $MY_IPV6 )


# Set some messages
export APPNAME="RetroNAS"
export PAUSEMSG='Press [Enter] to continue...'
export IPADDMSG="My IP addresses: ${MY_IPS}\n\n"


# reset this at the end here so it doesn't screw existing scripts
set +u
